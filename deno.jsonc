{
  "name": "@amethyst/ddframework",
  "version": "0.0.12",
  "license": "MIT",
  "exports": {
    ".": "./mod.ts",
    "./lib/types.ts": "./lib/leaf/types.ts",
    "./lib/utils.ts": "./lib/utils.ts",
  },
  // Imports
  "imports": {
    "ledger": "jsr:@ledger/ledger@0.1.9",
    "discord.js": "npm:discord.js@dev",
    "@std/ulid": "jsr:@std/ulid@1.0.0",
    "@ufuzzy": "npm:@leeoniya/ufuzzy@1.0.19",
  },
  "nodeModulesDir": "none",
  // Compiler Options
  "compilerOptions": {
    "lib": [
      "deno.window",
      "deno.ns",
      "deno.worker",
      "deno.unstable",
      "decorators",
      "dom.asynciterable"
    ],
    "checkJs": false,
    "allowUnreachableCode": false,
    "allowUnusedLabels": false,
    "noErrorTruncation": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": true,
    "noImplicitOverride": true,
    "noImplicitReturns": true,
    "noImplicitThis": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noUncheckedIndexedAccess": false,
    "strict": true,
    "strictBindCallApply": true,
    "strictFunctionTypes": true,
    "strictPropertyInitialization": true,
    "strictNullChecks": true,
    "useUnknownInCatchVariables": true
  },
  // Linting Options
  "lint": {
    "rules": {
      "tags": [
        "recommended"
      ],
      "include": [
        "ban-untagged-todo",
        "camelcase",
        "default-param-last",
        "eqeqeq",
        "explicit-function-return-type",
        "explicit-module-boundary-types",
        "guard-for-in",
        "no-const-assign",
        "no-eval",
        "no-external-import",
        "no-self-compare",
        "no-sparse-arrays",
        "no-sync-fn-in-async-fn",
        "no-throw-literal",
        "no-undef",
        "prefer-ascii",
        "single-var-declarator",
        "triple-slash-reference",
        "verbatim-module-syntax"
      ]
    }
  },
  // Formatting Options
  "fmt": {
    "useTabs": false,
    "lineWidth": 1024,
    "indentWidth": 2,
    "semiColons": true,
    "singleQuote": true,
    "proseWrap": "always"
  }
}
