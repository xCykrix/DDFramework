import { Discordeno } from './deps.ts';
import { createDDFrameworkProperties } from './lib/desired.ts';
import { DDFramework } from './mod.ts';

const framework = DDFramework.create(
  {
    applicationId: Deno.env.get('APPLICATION_ID') ?? '',
    publicKey: Deno.env.get('PUBLIC_KEY') ?? '',
    clientId: Deno.env.get('CLIENT_ID_OAUTH2') ?? '',
    clientSecret: Deno.env.get('CLIENT_SECRET_OAUTH2') ?? '',
    token: Deno.env.get('BOT_TOKEN') ?? '',
    developers: [],
    errorHandler: (error) => {
      console.error('[DDFramework] Captured Internal Error\n', error);
    },
  },
  createDDFrameworkProperties({}),
);

framework.leaf.linkLeaf({
  schema: {
    name: 'ping',
    description: 'Ping Command!',
    type: Discordeno.ApplicationCommandTypes.ChatInput,
    options: [
      {
        name: 'check',
        description: 'Check the bot latency',
        type: Discordeno.ApplicationCommandOptionTypes.SubCommand,
      },
    ],
  },
  options: {
    guild: {
      required: true,
      botRequiredGuildPermissions: [],
      userRequiredGuildPermissions: [],
      botRequiredChannelPermissions: [],
      userRequiredChannelPermissions: [],
    },
    developerRequired: false,
    channelTypesRequired: [Discordeno.ChannelTypes.GuildText],
    components: {
      acceptedBaseCustomIds: [],
      requireStatePacket: true,
      restrictToAuthor: true,
    },
  },
  handler: {
    callback: async ({ interaction }) => {
      await interaction.respond({ content: 'Pong!' }, {
        isPrivate: true,
      });
    },
  },
});

await framework.start();

/**
 * import { createDesiredPropertiesObject } from '@discordeno';

// Create the Desired Bot Properties in RemoveKey Mode.
export const desiredProperties = createDesiredPropertiesObject({
  activityInstance: {},
  activityLocation: {},
  attachment: {
    contentType: true,
    description: true,
    duration_secs: false,
    ephemeral: true,
    filename: true,
    flags: true,
    height: false,
    id: true,
    proxyUrl: false,
    size: true,
    title: true,
    url: true,
    waveform: false,
    width: false,
  },
  avatarDecorationData: {},
  channel: {
    applicationId: false,
    appliedTags: false,
    availableTags: false,
    bitrate: false,
    defaultAutoArchiveDuration: false,
    defaultForumLayout: false,
    defaultReactionEmoji: false,
    defaultSortOrder: false,
    defaultThreadRateLimitPerUser: false,
    flags: true,
    guildId: true,
    icon: false,
    id: true,
    lastMessageId: true,
    lastPinTimestamp: false,
    member: true,
    memberCount: false,
    messageCount: false,
    name: true,
    ownerId: true,
    parentId: true,
    permissionOverwrites: true,
    permissions: true,
    position: true,
    rateLimitPerUser: false,
    recipients: false,
    rtcRegion: false,
    threadMetadata: true,
    topic: false,
    totalMessageSent: false,
    type: true,
    userLimit: false,
    videoQualityMode: false,
  },
  defaultReactionEmoji: {},
  emoji: {
    id: true,
    name: true,
    roles: true,
    user: true,
  },
  entitlement: {},
  forumTag: {},
  guild: {
    afkChannelId: false,
    afkTimeout: false,
    applicationId: true,
    approximateMemberCount: true,
    approximatePresenceCount: false,
    banner: false,
    channels: true,
    defaultMessageNotifications: false,
    description: false,
    discoverySplash: false,
    emojis: true,
    explicitContentFilter: false,
    icon: false,
    iconHash: false,
    id: true,
    incidentsData: false,
    joinedAt: false,
    large: false,
    maxMembers: false,
    maxPresences: false,
    maxStageVideoChannelUsers: false,
    maxVideoChannelUsers: false,
    memberCount: false,
    members: true,
    mfaLevel: false,
    name: true,
    nsfwLevel: false,
    owner: true,
    ownerId: true,
    permissions: true,
    preferredLocale: false,
    premiumProgressBarEnabled: false,
    premiumSubscriptionCount: false,
    premiumTier: false,
    presences: false,
    publicUpdatesChannelId: true,
    roles: true,
    rulesChannelId: false,
    safetyAlertsChannelId: true,
    shardId: true,
    splash: false,
    stageInstances: false,
    stickers: false,
    systemChannelFlags: true,
    systemChannelId: true,
    toggles: true,
    unavailable: true,
    vanityUrlCode: false,
    verificationLevel: false,
    voiceStates: false,
    welcomeScreen: false,
    widgetChannelId: false,
    widgetEnabled: false,
  },
  guildOnboarding: {},
  guildOnboardingPrompt: {},
  guildOnboardingPromptOption: {},
  incidentsData: {},
  interaction: {
    applicationId: true,
    appPermissions: true,
    authorizingIntegrationOwners: false,
    channel: true,
    channelId: true,
    context: true,
    data: true,
    guild: true,
    guildId: true,
    guildLocale: false,
    id: true,
    locale: false,
    member: true,
    message: true,
    token: true,
    type: true,
    user: true,
    version: false,
  },
  interactionCallback: {
    activityInstanceId: true,
    id: true,
    responseMessageEphemeral: true,
    responseMessageId: true,
    responseMessageLoading: true,
    type: true,
  },
  interactionCallbackResponse: {
    interaction: true,
    resource: true,
  },
  interactionResource: {
    activityInstance: true,
    message: true,
    type: true,
  },
  invite: {},
  inviteStageInstance: {},
  member: {
    avatar: false,
    avatarDecorationData: false,
    banner: false,
    communicationDisabledUntil: true,
    guildId: true,
    id: true,
    joinedAt: false,
    nick: false,
    permissions: true,
    premiumSince: false,
    roles: true,
    toggles: true,
    user: true,
  },
  message: {
    activity: false,
    application: true,
    applicationId: true,
    attachments: true,
    author: true,
    call: false,
    channelId: true,
    components: true,
    content: true,
    editedTimestamp: true,
    embeds: true,
    guildId: true,
    id: true,
    interaction: true,
    interactionMetadata: true,
    member: true,
    mentionedChannelIds: true,
    mentionedRoleIds: true,
    mentions: true,
    messageReference: true,
    messageSnapshots: true,
    nonce: true,
    poll: true,
    reactions: true,
    referencedMessage: true,
    stickerItems: false,
    thread: true,
    type: true,
    webhookId: true,
  },
  messageCall: {},
  messageInteraction: {
    id: true,
    member: true,
    name: true,
    type: true,
    user: true,
  },
  messageInteractionMetadata: {
    authorizingIntegrationOwners: false,
    id: true,
    interactedMessageId: true,
    originalResponseMessageId: true,
    targetMessageId: true,
    targetUser: true,
    triggeringInteractionMetadata: true,
    type: true,
    user: true,
  },
  messageReference: {
    channelId: true,
    guildId: true,
    messageId: true,
  },
  messageSnapshot: {
    message: true,
  },
  component: {
    accentColor: true,
    accessory: true,
    channelTypes: true,
    component: true,
    components: true,
    content: true,
    customId: true,
    defaultValues: true,
    description: true,
    disabled: true,
    divider: true,
    emoji: true,
    file: true,
    id: true,
    items: true,
    label: true,
    maxLength: true,
    maxValues: true,
    media: true,
    minLength: true,
    minValues: true,
    name: true,
    options: true,
    placeholder: true,
    required: true,
    size: true,
    skuId: true,
    spacing: true,
    spoiler: true,
    style: true,
    type: true,
    url: true,
    value: true,
    values: true,
  },
  poll: {},
  pollAnswer: {},
  pollAnswerCount: {},
  pollMedia: {},
  pollResult: {},
  role: {
    color: false,
    flags: true,
    guildId: true,
    icon: false,
    id: true,
    name: true,
    permissions: true,
    position: true,
    tags: true,
    toggles: true,
    unicodeEmoji: false,
  },
  scheduledEvent: {},
  scheduledEventRecurrenceRule: {},
  sku: {},
  soundboardSound: {},
  stageInstance: {},
  sticker: {},
  subscription: {},
  user: {
    accentColor: false,
    avatar: true,
    avatarDecorationData: false,
    banner: false,
    discriminator: true,
    email: true,
    flags: true,
    globalName: true,
    id: true,
    locale: false,
    premiumType: false,
    publicFlags: true,
    toggles: true,
    username: true,
  },
  voiceState: {},
  webhook: {
    applicationId: true,
    avatar: false,
    channelId: true,
    guildId: true,
    id: true,
    name: true,
    sourceChannel: true,
    sourceGuild: true,
    token: true,
    type: true,
    url: true,
    user: true,
  },
});

// Export the BotDesiredProperties Type.
export interface BotDesiredProperties extends Required<typeof desiredProperties> {}

 */
